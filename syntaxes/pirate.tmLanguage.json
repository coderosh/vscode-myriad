{
  "name": "pirate",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#entities"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#punctuation"
    },
    {
      "include": "#strings"
    },
    {
      "match": "(\\w+)",
      "name": "variable.name.pirate"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "match": "//(.*)",
          "name": "comment.line.double-dash.pirate"
        },
        {
          "begin": "/\\*",
          "end": "\\*/",
          "name": "comment.block.pirate"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.pirate",
          "match": "\\b(ifn|elsewise|fer|whilst|belay|keepgoin|giveback|voyage|tryyerluck|catchem|fetchaboard|divvyup|heave|belay)\\b"
        },
        {
          "name": "storage.type.pirate",
          "match": "\\b(ahoy|unchangin|voyage)\\b"
        },
        {
          "name": "keyword.operator.pirate",
          "match": "<=|>=|--|\\+\\+|>|<|\\+|-|\\*|/|\\bbinds\\b|\\bequalstwin\\b|\\bnotmatches\\b|\\+=|-=|\\*=|/=|\\band\\b|\\bor\\b|\\bdenied\\b"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.numeric.pirate",
          "match": "\\b([0-9]+)\\b"
        },
        {
          "name": "constant.language.boolean.pirate",
          "match": "\\b(aye|nay)\\b"
        },
        {
          "name": "constant.language.null.pirate",
          "match": "\\b(nada)\\b"
        }
      ]
    },
    "punctuation": {
      "name": "punctuation.pirate",
      "match": ",|:|\\.|\\barrr\\b"
    },
    "entities": {
      "patterns": [
        {
          "match": "(voyage) +(\\w+)",
          "captures": {
            "1": {
              "name": "storage.type.pirate"
            },
            "2": {
              "name": "entity.name.function.pirate"
            }
          }
        },
        {
          "match": "(\\w+)\\(",
          "captures": {
            "1": {
              "name": "entity.name.function.pirate"
            }
          }
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.pirate",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.pirate",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.pirate",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.pirate",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.other.pirate",
          "begin": "`",
          "end": "`",
          "patterns": [
            {
              "name": "constant.character.escape.pirate",
              "match": "\\\\."
            }
          ]
        }
      ]
    }
  },
  "scopeName": "source.pirate"
}