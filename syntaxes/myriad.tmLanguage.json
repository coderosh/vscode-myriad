{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "myriad",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#entities"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#puncutation"
    },
    {
      "include": "#strings"
    },
    {
      "match": "(\\w+)",
      "name": "variable.name.myriad"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "match": "//(.*)",
          "name": "comment.line.double-dash.myriad"
        },
        {
          "begin": "/\\*",
          "end": "\\*/",
          "name": "comment.block.myriad"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.myriad",
          "match": "\\b(if|else|for|while|break|continue|return|func|try|catch|import|export|throw|break|continue)\\b"
        },
        {
          "name": "storage.type.myriad",
          "match": "\\b(let|const|func)\\b"
        },
        {
          "name": "keyword.operator.myriad",
          "match": "\\+\\+|--|\\+=|-=|\\*=|/=|\\*|/|-|\\+|\\!|&&|\\|\\||<=|>=|<|>|="
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.numeric.myriad",
          "match": "\\b([0-9]+)\\b"
        },
        {
          "name": "constant.language.boolean.myriad",
          "match": "\\b(true|false)\\b"
        },
        {
          "name": "constant.language.null.myriad",
          "match": "\\b(null)\\b"
        }
      ]
    },
    "puncutation": {
      "patterns": [
        {
          "name": "punctuation.myriad",
          "match": ";|,|:|\\."
        }
      ]
    },
    "entities": {
      "patterns": [
        {
          "match": "(func) +(\\w+)",
          "captures": {
            "1": {
              "name": "storage.type.myriad"
            },
            "2": {
              "name": "entity.name.function.myriad"
            }
          }
        },
        {
          "match": "(\\w+)\\(",
          "captures": {
            "1": {
              "name": "entity.name.function.myriad"
            }
          }
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.myriad",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.myriad",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.myriad",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.myriad",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.other.myriad",
          "begin": "`",
          "end": "`",
          "patterns": [
            {
              "name": "constant.character.escape.myriad",
              "match": "\\\\."
            }
          ]
        }
      ]
    }
  },
  "scopeName": "source.myriad"
}
